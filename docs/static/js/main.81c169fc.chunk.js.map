{"version":3,"sources":["components/AddCategory.js","utils/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/UseFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","handleAdd","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","slice","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","newCategory","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAENC,mBAAS,2BAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAe1C,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,EAAUE,GACVC,EAAc,4BAId,SACI,uBACII,KAAK,OACLC,MAAON,EACPO,SAhBc,SAACJ,GAEvBF,EAAcE,EAAEK,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAAMC,MAAM,EAAG,IAC1BX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPQ,EAAc,SAAC,GAAwB,IAAtBL,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKe,UAAU,OAAf,UACI,4BAAaL,GAALD,GACR,qBAAKO,IAAKN,EAAOO,IAAKjB,QCFrBkB,EAAU,SAAC,GAAkB,IAAD,ECAb,SAACpB,GAAc,IAAD,EAEZX,mBAAS,CAC/BkB,KAAM,GACNc,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,EDb2BK,CAJG,EAAf3B,UAIRc,EAJuB,EAI7BP,KAAcc,EAJe,EAIfA,QAEtB,OACI,sBAAKJ,UAAU,YAAf,UAEI,uBACCI,GAAW,0CACXP,EAAOL,KAAI,SAAAC,GAER,OAAO,mCACH,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEsBlBiB,EApCM,WAAO,IAAD,EAEavC,mBAAS,IAFtB,mBAEhBwC,EAFgB,KAEJC,EAFI,KASvB,OACI,qCACI,4CACA,uBACA,cAAC,EAAD,CAAa1C,UATH,SAAC2C,GAEfD,GAAc,SAAAD,GAAU,OAAKE,GAAL,mBAAqBF,UAWrCA,EAAWpB,KAAI,SAACT,GACZ,OACI,qCACI,6BAAKA,IACL,cAAC,EAAD,CAEIA,SAAUA,GADLA,a,MCpBrCgC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.81c169fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ handleAdd }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Insert your category...');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleAdd(inputValue);\r\n        setInputValue('Insert your category...');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n\r\n\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    handleAdd: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=SMsq7N9q3Dl9CKVtQz5gKXmaiJQ19xaS&q=${encodeURI(category)}&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title.slice(0, 10),\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className='card'>\r\n            <p key={id}>{title}</p>\r\n            <img alt={title} src={url}></img>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/UseFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // useEffect(() => getGifs(category).then(setImages), [category]);\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <div className='card-grid'>\r\n\r\n            <br />\r\n            {loading && <p>Loading..</p>}\r\n            {images.map(img => {\r\n\r\n                return <>\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                </>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../utils/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const handleAdd = (newCategory) => {\r\n\r\n        setCategories(categories => [newCategory, ...categories]);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Gif react!</h1>\r\n            <hr />\r\n            <AddCategory handleAdd={handleAdd} />\r\n            {\r\n\r\n\r\n                categories.map((category) => {\r\n                    return (\r\n                        <>\r\n                            <h2>{category}</h2>\r\n                            <GifGrid\r\n                                key={category}\r\n                                category={category}\r\n                            />\r\n                        </>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}